


Steps for any host request to the server
    1. DNS lookup
        - checks for server address using domain name. i.e. https://github.com/sprculguy/programming.git  >>  https://123.123.123.123:443/sprculguy/programming.git
    2. TCS/IP socket connection establishment between host and server
        - Breaks data into packets, which are then routed to the destination and reassembled. 
        - TCP is responsible for reliable data delivery, while IP handles addressing and routing the packets 
    3. HTTP request
        http request example -
            GET /sprculguy/programming.git HTTP/1.1     | -> start line: HTTP method + request target + HTTP version
            Host: www.google.com                        |
            User-Agent: Mozilla/5.0                     | -> HTTP request headers
            Accept-Language: en-US                      |
            <BODY>                                      | -> Request body(only when sending data to the server.e.g. HTTP method POST)
    4. HTTP response
        http response example -
            HTTP/1.1 200 OK                             | -> start line: HTTP version + status code + status message
            Date: Fri, 18 Jan 2021                      |
            Content-Type: text/html                     | -> HTTP response headers
            Transfer-Encoding: chunked                  |
            <BODY>                                      | -> Response body



Classic ports to know  
    21 = FTP(File Transfer Protocol) - upload files into a file share
    22 = SFTP(Secure File Transfer Protocol)
    80 = HTTP(Hypertext Transfer Protocol) - access unsecured websites
    433 = HTTPS(Hypertext Transfer Protocol Secure) - access secured websites
    22 = SSH(Secure Shell) - log into a Linux instance
    3389 = RDP(Remote Desktop Protocol) - log into a windows instance



Hosts 
    - Any devices that sends & receives trffic; eg. client, server.
    - Any Host needs 4 things for Internet connectivity
        1. IP address           - Identity (192.168.0.1)
        2. Subnet Mask          - Defines size/scope of local network
        3. Default Gateway      - Routers IP address
        4. DNS server IP address- Gives domain names to IP address
        - DHCP(Dynamic Host Configuration Protocol) server - provides configuration(IP,SM,DG,DNS) dynamically for host to connect to the Internet



Protocols
    - Set of rules & messages that forms internet standard
        eg. ARP(Address Resolution Protocol) 
				- Resolves IP to Mac address mapping
            HTTP(Web server)
            HTTPS(HTTP with SSL(SecureSocketLayer)/TSL(TransportLayerSecurity))
            DNS(Domain Name System) server
			TCP (Transmission Control Protocol)
				- Connection-oriented protocol that guarantees ordered and error-checked(slower than UDP) delivery of data
				- Ideal for applications where data integrity is crucial, such as; file transfers, web browsing, and email
			UDP (User Datagram Protocol)
				- Connectionless protocol that prioritizes faster data delivery by sending packets directly to an addressed destination, without guaranteeing delivery or order
				- Ideal for applications where some data loss is tolerable, such as; streaming video, online gaming, and VoIP (Voice over Internet Protocol)

OSI Model									TCP/IP Model

	7. Application Layer				↱	4. Application Layer
	6. Presentation Layer				|
	5. Session Layer					|
	4. Transport Layer						3. Transport Layer
	3. Network Layer						2. Internet Layer
	2. Data Link Layer					↱	1. Network Access Layer (or Link Layer)
	1. Physical Layer					|	




DNS(Domain Name Server)
    - special kind of Server with stored domain name and address mapping



HTTP Web Server Request Methods
    GET         Read data
    DELETE      Delete data
    POST        Insert data
    PUT         Update data(all fields)
    PATCH       Modify data(Partially - some of the all fields but not all)
    HEAD        Inspect resource headers
    TRACE       Echo back received message
    Options     Server Capabilities



CORS(Cross-Origin Resource Sharing) - Security mechanism that allows web applications to access resources from other domains
    - CORS defines a way for client web applications that are loaded in one domain to interact with resources in a different domain.
    - CORS allows the client browser to check with the third-party servers if the request is authorized before any data transfers.



HTTP Web Server response Status Codes
    Status 1__:Information
		100 Continue                            - The server has received the request headers, and the client should proceed to send the request body
		101 Switching Protocols                 - The requester has asked the server to switch protocols
		103 Checkpoint                          - Used in the resumable requests proposal to resume aborted PUT or POST requests

    Status 2__:Successful
		200 OK                                  - The request is OK (this is the standard response for successful HTTP requests)
		201 Created                             - The request has been fulfilled, and a new resource is created
		202 Accepted                            - The request has been accepted for processing, but the processing has not been completed
		203 Non-Authoritative Information       - The request has been successfully processed, but is returning information that may be from another source
		204 No Content                          - The request has been successfully processed, but is not returning any content
		205 Reset Content                       - The request has been successfully processed, but is not returning any content, and requires that the requester reset the document view
		206 Partial Content                     - The server is delivering only part of the resource due to a range header sent by the client

    Status 3__:Redirection
		300 Multiple Choices                    - A link list. The user can select a link and go to that location. Maximum five addresses
		301 Moved Permanently                   - The requested page has moved to a new URL
		302 Found                               - The requested page has moved temporarily to a new URL
		303 See Other                           - The requested page can be found under a different URL
		304 Not Modified                        - Indicates the requested page has not been modified since last requested
		306 Switch Proxy                        - No longer used
		307 Temporary Redirect                  - The requested page has moved temporarily to a new URL
		308 Resume Incomplete                   - Used in the resumable requests proposal to resume aborted PUT or POST requests

    Status 4__:Client Error
		400 Bad Request                         - The request cannot be fulfilled due to bad syntax
		401 Unauthorized                        - The request was a legal request, but the server is refusing to respond to it. For use when authentication is possible but has failed or not yet been provided
		402 Payment Required                    - Reserved for future use
		403 Forbidden                           - The request was a legal request, but the server is refusing to respond to it
		404 Not Found                           - The requested page could not be found but may be available again in the future
		405 Method Not Allowed                  - A request was made of a page using a request method not supported by that page
		406 Not Acceptable                      - The server can only generate a response that is not accepted by the client
		407 Proxy Authentication Required       - The client must first authenticate itself with the proxy
		408 Request Timeout                     - The server timed out waiting for the request
		409 Conflict                            - The request could not be completed because of a conflict in the request
		410 Gone                                - The requested page is no longer available
		411 Length Required                     - The "Content-Length" is not defined. The server will not accept the request without it
		412 Precondition Failed                 - The precondition given in the request evaluated to false by the server
		413 Request Entity Too Large            - The server will not accept the request, because the request entity is too large
		414 Request-URI Too Long                - The server will not accept the request, because the URL is too long. Occurs when you convert a POST request to a GET request with a long query information
		415 Unsupported Media Type              - The server will not accept the request, because the media type is not supported
		416 Requested Range Not Satisfiable     - The client has asked for a portion of the file, but the server cannot supply that portion
		417 Expectation Failed                  - The server cannot meet the requirements of the Expect request-header field

    Status 5__:Server Error
		500 Internal Server Error               - A generic error message, given when no more specific message is suitable
		501 Not Implemented                     - The server either does not recognize the request method, or it lacks the ability to fulfill the request
		502 Bad Gateway                         - The server was acting as a gateway or proxy and received an invalid response from the upstream server
		503 Service Unavailable                 - The server is currently unavailable (overloaded or down)
		504 Gateway Timeout                     - The server was acting as a gateway or proxy and did not receive a timely response from the upstream server
		505 HTTP Version Not Supported          - The server does not support the HTTP protocol version used in the request
		511 Network Authentication Required     - The client needs to authenticate to gain network access



API(Application Programming Interface)
	- 
	Types of APIs
		1. Private - within Organisation
		2. Partner - for selected Bussiness/Partner after usage varification by charging some ammount
		3. Public - 3rd party
	- |	   Base URL	  	|		End Point		  |
	  https://github.com/sprculguy/programming.git
		https or http               -> Protocol 
		github.com                  -> domain name
		.com						-> primary domain
		github 						-> secondary domain
		sprculguy/programming.git   -> resourse

